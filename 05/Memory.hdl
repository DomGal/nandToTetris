CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:

    DMux4Way(in = load, sel = address[13..14], a = loadMainMemoryFirst,
             b = loadMainMemorySecond, c = loadScreenMemory,
             d = loadKeyboardMemory);
    
    Or(a = loadMainMemoryFirst, b = loadMainMemorySecond, out = loadMainMemory);

    RAM16K(in = in, address = address[0..13], load = loadMainMemory, out = outMainMemory);
    Screen(in = in, address = address[0..12], load = loadScreenMemory, out = outScreenMemory);
    Keyboard(out = outKeyboardMemoryPrimer);

    Or8Way(in = address[0..7], out = keyboardSelectFirst);
    Or8Way(in = address[5..12], out = keyboardSelectSecond);
    Or(a = keyboardSelectFirst, b = keyboardSelectSecond, out = keyboardSelect);
    Not(in = keyboardSelect, out = notKeyboardSelect);
    And(a = notKeyboardSelect, b = loadKeyboardMemory, out = loadKeyboardMemoryAdjusted);

    Mux16(a = false, b = outKeyboardMemoryPrimer,
          sel = loadKeyboardMemoryAdjusted, out = outKeyboardMemory);
    
    // why is outKeyboardMemoryPrimer here?
    Mux4Way16(a = outMainMemory, b = outMainMemory, c = outScreenMemory,
              d = outKeyboardMemoryPrimer, sel = address[13..14], out = out);
}